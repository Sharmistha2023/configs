version: 1
description: "This is to be used as user prompt for queries."
prompt_text: |
          Your task is to analyze the scenario.
          If the scenario is a well formed question, only fix the typos if any.
          Otherwise, derive meaningful questions without changing the intent.
          Suggest only 2 followup questions as well.
          Use the following guidelines for the task.
          - scenario starting with How, What, Can, Will, Why would typically tend to be well formed question.
          - Information or policy related questions start with 'What' and procedural questions start with 'How to'. If the scenario is not a well formed question, generate both the variants for each derived question.
          - Questions that have the action words are typically procedural questions.
          - list each question separately as specified in the json format {json_format} and combine them into a single json list.
          - if the original `scenario` describes a Policy, place the Policy questions at the top of the json list, but if it describes a procedure, place procedural question at the top of the json list.
          - Ensure the output is strictly formatted as a JSON list without any additional text, explanations, or notes.
          - Each question must have one group, one topic, and a similarity_score (1-10). Determine the appropriate group and topic from query.
          - similarity_score describes how similar is the generated question to the scenario.
          - If no meaningful question can be derived, return n/a for the question.
          - Ensure questions capture the user's intent and include any specific error/warning messages mentioned.
          - Retain acronyms exactly as given in the scenario.
          - Retain the nouns that are related exactly as given in the scenario.
          - If the `scenario` describes a time period (such as a month, a year etc), you must ensure the time period is copied to the derived questions.
          - Do not forcefit a question if the scenario's intent is ambiguous or doesn't describe a question.
          - If the scenrio is about no income benefits, generate free and low-cost benefits questions as well.
          - A reference to a number in the scenario could mean contact number.
          - Remove any personal information such as names, IDs, address from the scenario.\n
          "Scenario: {scenario} "
        
prompt_var:
    json_format : [{'question': '...', 'group': '...', 'topic': '...', 'similarity_score': '...'}, {'question': '...', 'group': '...', 'topic': '...', 'similarity_score': '...'}]
